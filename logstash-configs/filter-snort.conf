# /etc/logstash/conf.d/filter-snort.conf
filter {
  if [type] == "snort"  {
    # This is the initial parsing of the log
    grok {
      match => { "message" => "\|%{SPACE}\[%{WORD:msg_source}\[%{WORD:msg}\]:%{SPACE}\[%{GREEDYDATA:sensor_name}\]%{SPACE}\]%{SPACE}\|\|%{SPACE}%{TIMESTAMP_ISO8601:event_timestamp}%{SPACE}%{INT:event_priority}%{SPACE}\[%{INT:gid}:%{INT:sid}:%{INT:rev}\]%{SPACE}%{DATA:alert_description}\|\|%{SPACE}%{DATA:classification}%{SPACE}\|\|%{SPACE}%{INT:protocol}%{SPACE}%{IP:SrcIp}%{SPACE}%{IP:DstIp}%{SPACE}%{INT:IpVersion}%{SPACE}%{INT:IpHeaderLength}%{SPACE}%{INT:IpTos}%{SPACE}%{INT:PacketLength}%{SPACE}%{INT:IpId}%{SPACE}%{INT:IpReserved}%{SPACE}%{INT:FragOffset}%{SPACE}%{INT:TTL}%{SPACE}%{INT:Checksum}%{SPACE}\|\|%{SPACE}%{INT:SrcPort}%{SPACE}%{INT:DstPort}%{SPACE}"}
    }
    if [protocol] == 6 {
      mutate {
        replace => { "protocol" => "TCP" }
      }
      grok {
        match => { "IPTypeHeader" => "%{INT:SrcPort}·%{INT:DstPort}·%{INT:TcpSequence}·%{INT:TcpAck}·%{INT:TcpOffset}·%{INT:TcpReserved}·%{INT:TcpFlags}·%{INT:TcpWindow}·%{INT:TcpChecksum}·%{INT:TcpUrgentPointer}" }
      }
    }
    if [protocol] == 17 {
      mutate {
        replace => { "protocol" => "UDP" }
      }
      grok {
        match => { "IPTypeHeader" => "%{INT:SrcPort}·%{INT:DstPort}·%{INT:UdpLen}·%{INT:UdpChecksum}" }
      }
    }
    if [protocol] == 1 {
      mutate {
        replace => { "protocol" => "ICMP" }
      }
      grok {
        match => { "IPTypeHeader" => "%{INT:IcmpType}·%{INT:IcmpCode}·%{INT:IcmpChecksum}·%{INT:IcmpId}·%{INT:IcmpSequence}" }
      }
    }
    if [protocol] == 2 {
      mutate {
        replace => { "protocol" => "IGMP" }
      }
    }

    # Geoip check for the SrcIP
    geoip {
      source => "SrcIp"
      target => "SrcGeoip"
      database => "/etc/logstash/GeoLite2-City.mmdb"
      add_field => [ "[SrcGeoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[SrcGeoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[SrcGeoip][coordinates]", "float"]
    }

    # Geoip check for DstIP
    geoip {
      source => "DstIp"
      target => "DstGeoip"
      database => "/etc/logstash/GeoLite2-City.mmdb"
      add_field => [ "[DstGeoip][coordinates]", "%{[DstGeoip][longitude]}" ]
      add_field => [ "[DstGeoip][coordinates]", "%{[DstGeoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[DstGeoip][coordinates]", "float"]
    }

   # If the alert is a Snort GPL alert break it apart for easier reading and categorization
   if [alert_description] =~ "GPL " {
   # This will parse out the category type from the alert
     grok {
       match => { "alert" => "GPL\s+%{DATA:category}\s" }
     }
     # This will store the category
     mutate {
       add_field => { "rule_type" => "Snort GPL" }
       lowercase => [ "category"]
     }
    }

    # If the alert is an Emerging Threat alert break it apart for easier reading and categorization
    if [alert_description] =~ "ET " {
      # This will parse out the category type from the alert
      grok {
        match => { "alert" => "ET\s+%{DATA:category}\s" }
      }
      # This will store the category
      mutate {
        add_field => { "rule_type" => "Emerging Threats" }
        lowercase => [ "category"]
      }
    }

    # I recommend changing the field types below to integer so searches can do greater than or less than
    # and also so math functions can be ran against them
    mutate {
      convert => [ "SrcPort", "integer" ]
      convert => [ "DstPort", "integer" ]
      convert => [ "event_priority", "integer" ]
      convert => [ "protocol", "integer" ]
    }
    # Remove message - if wanna save space uncomment it
    # remove_field => [ "message"]
    #}

    # This will translate the priority field into a severity field of either High, Medium, or Low
    if [event_priority] == 1 {
      mutate {
        add_field => { "severity" => "High" }
      }
    }
    if [event_priority] == 2 {
      mutate {
        add_field => { "severity" => "Medium" }
      }
    }
    if [event_priority] == 3 {
      mutate {
        add_field => { "severity" => "Low" }
      }
    }

    # This section adds URLs to lookup information about a rule online
    mutate {
      add_field => [ "ET_Signature_Info", "http://doc.emergingthreats.net/%{sid}" ]
      add_field => [ "Snort_Signature_Info", "https://www.snort.org/search?query=%{gid}-%{sid}" ]
    }


    #protocol type detection
    if [protocol] == 17 {
      mutate {
        replace => { "protocol" => "UDP" }
      }
    }

    if [protocol] == 6 {
      mutate {
        replace => { "protocol" => "TCP" }
      }
    }

    if [protocol] == 1 {
      mutate {
        replace => { "protocol" => "ICMP" }
      }
    }

    if [protocol] == 2 {
      mutate {
        replace => { "protocol" => "IGMP" }
      }
    }
  }
}
